swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /acceso_historia/:
    get:
      tags:
      - acceso_historia
      description: get AccesoHistoria
      operationId: AccesoHistoriaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AccesoHistoria'
        "404":
          description: not found resource
    post:
      tags:
      - acceso_historia
      description: create AccesoHistoria
      operationId: AccesoHistoriaController.Post
      parameters:
      - in: body
        name: body
        description: body for AccesoHistoria content
        required: true
        schema:
          $ref: '#/definitions/models.AccesoHistoria'
      responses:
        "201":
          description: '{int} models.AccesoHistoria'
        "400":
          description: the request contains incorrect syntax
  /acceso_historia/{id}:
    get:
      tags:
      - acceso_historia
      description: get AccesoHistoria by id
      operationId: AccesoHistoriaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AccesoHistoria'
        "404":
          description: not found resource
    put:
      tags:
      - acceso_historia
      description: update the AccesoHistoria
      operationId: AccesoHistoriaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AccesoHistoria content
        required: true
        schema:
          $ref: '#/definitions/models.AccesoHistoria'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AccesoHistoria'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - acceso_historia
      description: delete the AccesoHistoria
      operationId: AccesoHistoriaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /anamnesis/:
    get:
      tags:
      - anamnesis
      description: get Anamnesis
      operationId: AnamnesisController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Anamnesis'
        "404":
          description: not found resource
    post:
      tags:
      - anamnesis
      description: create Anamnesis
      operationId: AnamnesisController.Post
      parameters:
      - in: body
        name: body
        description: body for Anamnesis content
        required: true
        schema:
          $ref: '#/definitions/models.Anamnesis'
      responses:
        "201":
          description: '{int} models.Anamnesis'
        "400":
          description: the request contains incorrect syntax
  /anamnesis/{id}:
    get:
      tags:
      - anamnesis
      description: get Anamnesis by id
      operationId: AnamnesisController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Anamnesis'
        "404":
          description: not found resource
    put:
      tags:
      - anamnesis
      description: update the Anamnesis
      operationId: AnamnesisController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Anamnesis content
        required: true
        schema:
          $ref: '#/definitions/models.Anamnesis'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Anamnesis'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - anamnesis
      description: delete the Anamnesis
      operationId: AnamnesisController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /antecedente/:
    get:
      tags:
      - antecedente
      description: get Antecedente
      operationId: AntecedenteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Antecedente'
        "404":
          description: not found resource
    post:
      tags:
      - antecedente
      description: create Antecedente
      operationId: AntecedenteController.Post
      parameters:
      - in: body
        name: body
        description: body for Antecedente content
        required: true
        schema:
          $ref: '#/definitions/models.Antecedente'
      responses:
        "201":
          description: '{int} models.Antecedente'
        "400":
          description: the request contains incorrect syntax
  /antecedente/{id}:
    get:
      tags:
      - antecedente
      description: get Antecedente by id
      operationId: AntecedenteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Antecedente'
        "404":
          description: not found resource
    put:
      tags:
      - antecedente
      description: update the Antecedente
      operationId: AntecedenteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Antecedente content
        required: true
        schema:
          $ref: '#/definitions/models.Antecedente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Antecedente'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - antecedente
      description: delete the Antecedente
      operationId: AntecedenteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /antecedente_psicologico/:
    get:
      tags:
      - antecedente_psicologico
      description: get AntecedentePsicologico
      operationId: AntecedentePsicologicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AntecedentePsicologico'
        "404":
          description: not found resource
    post:
      tags:
      - antecedente_psicologico
      description: create AntecedentePsicologico
      operationId: AntecedentePsicologicoController.Post
      parameters:
      - in: body
        name: body
        description: body for AntecedentePsicologico content
        required: true
        schema:
          $ref: '#/definitions/models.AntecedentePsicologico'
      responses:
        "201":
          description: '{int} models.AntecedentePsicologico'
        "400":
          description: the request contains incorrect syntax
  /antecedente_psicologico/{id}:
    get:
      tags:
      - antecedente_psicologico
      description: get AntecedentePsicologico by id
      operationId: AntecedentePsicologicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AntecedentePsicologico'
        "404":
          description: not found resource
    put:
      tags:
      - antecedente_psicologico
      description: update the AntecedentePsicologico
      operationId: AntecedentePsicologicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AntecedentePsicologico content
        required: true
        schema:
          $ref: '#/definitions/models.AntecedentePsicologico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AntecedentePsicologico'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - antecedente_psicologico
      description: delete the AntecedentePsicologico
      operationId: AntecedentePsicologicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /comportamiento_consulta/:
    get:
      tags:
      - comportamiento_consulta
      description: get ComportamientoConsulta
      operationId: ComportamientoConsultaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComportamientoConsulta'
        "404":
          description: not found resource
    post:
      tags:
      - comportamiento_consulta
      description: create ComportamientoConsulta
      operationId: ComportamientoConsultaController.Post
      parameters:
      - in: body
        name: body
        description: body for ComportamientoConsulta content
        required: true
        schema:
          $ref: '#/definitions/models.ComportamientoConsulta'
      responses:
        "201":
          description: '{int} models.ComportamientoConsulta'
        "400":
          description: the request contains incorrect syntax
  /comportamiento_consulta/{id}:
    get:
      tags:
      - comportamiento_consulta
      description: get ComportamientoConsulta by id
      operationId: ComportamientoConsultaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComportamientoConsulta'
        "404":
          description: not found resource
    put:
      tags:
      - comportamiento_consulta
      description: update the ComportamientoConsulta
      operationId: ComportamientoConsultaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ComportamientoConsulta content
        required: true
        schema:
          $ref: '#/definitions/models.ComportamientoConsulta'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComportamientoConsulta'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - comportamiento_consulta
      description: delete the ComportamientoConsulta
      operationId: ComportamientoConsultaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /composicion_familiar/:
    get:
      tags:
      - composicion_familiar
      description: get ComposicionFamiliar
      operationId: ComposicionFamiliarController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComposicionFamiliar'
        "404":
          description: not found resource
    post:
      tags:
      - composicion_familiar
      description: create ComposicionFamiliar
      operationId: ComposicionFamiliarController.Post
      parameters:
      - in: body
        name: body
        description: body for ComposicionFamiliar content
        required: true
        schema:
          $ref: '#/definitions/models.ComposicionFamiliar'
      responses:
        "201":
          description: '{int} models.ComposicionFamiliar'
        "400":
          description: the request contains incorrect syntax
  /composicion_familiar/{id}:
    get:
      tags:
      - composicion_familiar
      description: get ComposicionFamiliar by id
      operationId: ComposicionFamiliarController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComposicionFamiliar'
        "404":
          description: not found resource
    put:
      tags:
      - composicion_familiar
      description: update the ComposicionFamiliar
      operationId: ComposicionFamiliarController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ComposicionFamiliar content
        required: true
        schema:
          $ref: '#/definitions/models.ComposicionFamiliar'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComposicionFamiliar'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - composicion_familiar
      description: delete the ComposicionFamiliar
      operationId: ComposicionFamiliarController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /control_placa/:
    get:
      tags:
      - control_placa
      description: get ControlPlaca
      operationId: ControlPlacaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ControlPlaca'
        "404":
          description: not found resource
    post:
      tags:
      - control_placa
      description: create ControlPlaca
      operationId: ControlPlacaController.Post
      parameters:
      - in: body
        name: body
        description: body for ControlPlaca content
        required: true
        schema:
          $ref: '#/definitions/models.ControlPlaca'
      responses:
        "201":
          description: '{int} models.ControlPlaca'
        "400":
          description: the request contains incorrect syntax
  /control_placa/{id}:
    get:
      tags:
      - control_placa
      description: get ControlPlaca by id
      operationId: ControlPlacaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ControlPlaca'
        "404":
          description: not found resource
    put:
      tags:
      - control_placa
      description: update the ControlPlaca
      operationId: ControlPlacaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ControlPlaca content
        required: true
        schema:
          $ref: '#/definitions/models.ControlPlaca'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ControlPlaca'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - control_placa
      description: delete the ControlPlaca
      operationId: ControlPlacaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /convencion_odontograma/:
    get:
      tags:
      - convencion_odontograma
      description: get ConvencionOdontograma
      operationId: ConvencionOdontogramaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConvencionOdontograma'
        "404":
          description: not found resource
    post:
      tags:
      - convencion_odontograma
      description: create ConvencionOdontograma
      operationId: ConvencionOdontogramaController.Post
      parameters:
      - in: body
        name: body
        description: body for ConvencionOdontograma content
        required: true
        schema:
          $ref: '#/definitions/models.ConvencionOdontograma'
      responses:
        "201":
          description: '{int} models.ConvencionOdontograma'
        "400":
          description: the request contains incorrect syntax
  /convencion_odontograma/{id}:
    get:
      tags:
      - convencion_odontograma
      description: get ConvencionOdontograma by id
      operationId: ConvencionOdontogramaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConvencionOdontograma'
        "404":
          description: not found resource
    put:
      tags:
      - convencion_odontograma
      description: update the ConvencionOdontograma
      operationId: ConvencionOdontogramaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ConvencionOdontograma content
        required: true
        schema:
          $ref: '#/definitions/models.ConvencionOdontograma'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConvencionOdontograma'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - convencion_odontograma
      description: delete the ConvencionOdontograma
      operationId: ConvencionOdontogramaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /datos_emergencia/:
    get:
      tags:
      - datos_emergencia
      description: get DatosEmergencia
      operationId: DatosEmergenciaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DatosEmergencia'
        "404":
          description: not found resource
    post:
      tags:
      - datos_emergencia
      description: create DatosEmergencia
      operationId: DatosEmergenciaController.Post
      parameters:
      - in: body
        name: body
        description: body for DatosEmergencia content
        required: true
        schema:
          $ref: '#/definitions/models.DatosEmergencia'
      responses:
        "201":
          description: '{int} models.DatosEmergencia'
        "400":
          description: the request contains incorrect syntax
  /datos_emergencia/{id}:
    get:
      tags:
      - datos_emergencia
      description: get DatosEmergencia by id
      operationId: DatosEmergenciaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DatosEmergencia'
        "404":
          description: not found resource
    put:
      tags:
      - datos_emergencia
      description: update the DatosEmergencia
      operationId: DatosEmergenciaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DatosEmergencia content
        required: true
        schema:
          $ref: '#/definitions/models.DatosEmergencia'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DatosEmergencia'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - datos_emergencia
      description: delete the DatosEmergencia
      operationId: DatosEmergenciaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /diagnostico/:
    get:
      tags:
      - diagnostico
      description: get Diagnostico
      operationId: DiagnosticoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Diagnostico'
        "404":
          description: not found resource
    post:
      tags:
      - diagnostico
      description: create Diagnostico
      operationId: DiagnosticoController.Post
      parameters:
      - in: body
        name: body
        description: body for Diagnostico content
        required: true
        schema:
          $ref: '#/definitions/models.Diagnostico'
      responses:
        "201":
          description: '{int} models.Diagnostico'
        "400":
          description: the request contains incorrect syntax
  /diagnostico/{id}:
    get:
      tags:
      - diagnostico
      description: get Diagnostico by id
      operationId: DiagnosticoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Diagnostico'
        "404":
          description: not found resource
    put:
      tags:
      - diagnostico
      description: update the Diagnostico
      operationId: DiagnosticoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Diagnostico content
        required: true
        schema:
          $ref: '#/definitions/models.Diagnostico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Diagnostico'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - diagnostico
      description: delete the Diagnostico
      operationId: DiagnosticoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /especialidad/:
    get:
      tags:
      - especialidad
      description: get Especialidad
      operationId: EspecialidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Especialidad'
        "404":
          description: not found resource
    post:
      tags:
      - especialidad
      description: create Especialidad
      operationId: EspecialidadController.Post
      parameters:
      - in: body
        name: body
        description: body for Especialidad content
        required: true
        schema:
          $ref: '#/definitions/models.Especialidad'
      responses:
        "201":
          description: '{int} models.Especialidad'
        "400":
          description: the request contains incorrect syntax
  /especialidad/{id}:
    get:
      tags:
      - especialidad
      description: get Especialidad by id
      operationId: EspecialidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Especialidad'
        "404":
          description: not found resource
    put:
      tags:
      - especialidad
      description: update the Especialidad
      operationId: EspecialidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Especialidad content
        required: true
        schema:
          $ref: '#/definitions/models.Especialidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Especialidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - especialidad
      description: delete the Especialidad
      operationId: EspecialidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /examen_dental/:
    get:
      tags:
      - examen_dental
      description: get ExamenDental
      operationId: ExamenDentalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenDental'
        "404":
          description: not found resource
    post:
      tags:
      - examen_dental
      description: create ExamenDental
      operationId: ExamenDentalController.Post
      parameters:
      - in: body
        name: body
        description: body for ExamenDental content
        required: true
        schema:
          $ref: '#/definitions/models.ExamenDental'
      responses:
        "201":
          description: '{int} models.ExamenDental'
        "400":
          description: the request contains incorrect syntax
  /examen_dental/{id}:
    get:
      tags:
      - examen_dental
      description: get ExamenDental by id
      operationId: ExamenDentalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenDental'
        "404":
          description: not found resource
    put:
      tags:
      - examen_dental
      description: update the ExamenDental
      operationId: ExamenDentalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ExamenDental content
        required: true
        schema:
          $ref: '#/definitions/models.ExamenDental'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenDental'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - examen_dental
      description: delete the ExamenDental
      operationId: ExamenDentalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /examen_estomatologico/:
    get:
      tags:
      - examen_estomatologico
      description: get ExamenEstomatologico
      operationId: ExamenEstomatologicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenEstomatologico'
        "404":
          description: not found resource
    post:
      tags:
      - examen_estomatologico
      description: create ExamenEstomatologico
      operationId: ExamenEstomatologicoController.Post
      parameters:
      - in: body
        name: body
        description: body for ExamenEstomatologico content
        required: true
        schema:
          $ref: '#/definitions/models.ExamenEstomatologico'
      responses:
        "201":
          description: '{int} models.ExamenEstomatologico'
        "400":
          description: the request contains incorrect syntax
  /examen_estomatologico/{id}:
    get:
      tags:
      - examen_estomatologico
      description: get ExamenEstomatologico by id
      operationId: ExamenEstomatologicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenEstomatologico'
        "404":
          description: not found resource
    put:
      tags:
      - examen_estomatologico
      description: update the ExamenEstomatologico
      operationId: ExamenEstomatologicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ExamenEstomatologico content
        required: true
        schema:
          $ref: '#/definitions/models.ExamenEstomatologico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenEstomatologico'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - examen_estomatologico
      description: delete the ExamenEstomatologico
      operationId: ExamenEstomatologicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /excusa_medica/:
    get:
      tags:
      - excusa_medica
      description: get ExcusaMedica
      operationId: ExcusaMedicaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExcusaMedica'
        "404":
          description: not found resource
    post:
      tags:
      - excusa_medica
      description: create ExcusaMedica
      operationId: ExcusaMedicaController.Post
      parameters:
      - in: body
        name: body
        description: body for ExcusaMedica content
        required: true
        schema:
          $ref: '#/definitions/models.ExcusaMedica'
      responses:
        "201":
          description: '{int} models.ExcusaMedica'
        "400":
          description: the request contains incorrect syntax
  /excusa_medica/{id}:
    get:
      tags:
      - excusa_medica
      description: get ExcusaMedica by id
      operationId: ExcusaMedicaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExcusaMedica'
        "404":
          description: not found resource
    put:
      tags:
      - excusa_medica
      description: update the ExcusaMedica
      operationId: ExcusaMedicaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ExcusaMedica content
        required: true
        schema:
          $ref: '#/definitions/models.ExcusaMedica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExcusaMedica'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - excusa_medica
      description: delete the ExcusaMedica
      operationId: ExcusaMedicaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /historia_clinica/:
    get:
      tags:
      - historia_clinica
      description: get HistoriaClinica
      operationId: HistoriaClinicaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HistoriaClinica'
        "404":
          description: not found resource
    post:
      tags:
      - historia_clinica
      description: create HistoriaClinica
      operationId: HistoriaClinicaController.Post
      parameters:
      - in: body
        name: body
        description: body for HistoriaClinica content
        required: true
        schema:
          $ref: '#/definitions/models.HistoriaClinica'
      responses:
        "201":
          description: '{int} models.HistoriaClinica'
        "400":
          description: the request contains incorrect syntax
  /historia_clinica/{id}:
    get:
      tags:
      - historia_clinica
      description: get HistoriaClinica by id
      operationId: HistoriaClinicaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HistoriaClinica'
        "404":
          description: not found resource
    put:
      tags:
      - historia_clinica
      description: update the HistoriaClinica
      operationId: HistoriaClinicaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for HistoriaClinica content
        required: true
        schema:
          $ref: '#/definitions/models.HistoriaClinica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HistoriaClinica'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - historia_clinica
      description: delete the HistoriaClinica
      operationId: HistoriaClinicaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /hoja_historia/:
    get:
      tags:
      - hoja_historia
      description: get HojaHistoria
      operationId: HojaHistoriaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HojaHistoria'
        "404":
          description: not found resource
    post:
      tags:
      - hoja_historia
      description: create HojaHistoria
      operationId: HojaHistoriaController.Post
      parameters:
      - in: body
        name: body
        description: body for HojaHistoria content
        required: true
        schema:
          $ref: '#/definitions/models.HojaHistoria'
      responses:
        "201":
          description: '{int} models.HojaHistoria'
        "400":
          description: the request contains incorrect syntax
  /hoja_historia/{id}:
    get:
      tags:
      - hoja_historia
      description: get HojaHistoria by id
      operationId: HojaHistoriaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HojaHistoria'
        "404":
          description: not found resource
    put:
      tags:
      - hoja_historia
      description: update the HojaHistoria
      operationId: HojaHistoriaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for HojaHistoria content
        required: true
        schema:
          $ref: '#/definitions/models.HojaHistoria'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HojaHistoria'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - hoja_historia
      description: delete the HojaHistoria
      operationId: HojaHistoriaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /limites/:
    get:
      tags:
      - limites
      description: get Limites
      operationId: LimitesController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Limites'
        "404":
          description: not found resource
    post:
      tags:
      - limites
      description: create Limites
      operationId: LimitesController.Post
      parameters:
      - in: body
        name: body
        description: body for Limites content
        required: true
        schema:
          $ref: '#/definitions/models.Limites'
      responses:
        "201":
          description: '{int} models.Limites'
        "400":
          description: the request contains incorrect syntax
  /limites/{id}:
    get:
      tags:
      - limites
      description: get Limites by id
      operationId: LimitesController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Limites'
        "404":
          description: not found resource
    put:
      tags:
      - limites
      description: update the Limites
      operationId: LimitesController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Limites content
        required: true
        schema:
          $ref: '#/definitions/models.Limites'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Limites'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - limites
      description: delete the Limites
      operationId: LimitesController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /odontograma/:
    get:
      tags:
      - odontograma
      description: get Odontograma
      operationId: OdontogramaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Odontograma'
        "404":
          description: not found resource
    post:
      tags:
      - odontograma
      description: create Odontograma
      operationId: OdontogramaController.Post
      parameters:
      - in: body
        name: body
        description: body for Odontograma content
        required: true
        schema:
          $ref: '#/definitions/models.Odontograma'
      responses:
        "201":
          description: '{int} models.Odontograma'
        "400":
          description: the request contains incorrect syntax
  /odontograma/{id}:
    get:
      tags:
      - odontograma
      description: get Odontograma by id
      operationId: OdontogramaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Odontograma'
        "404":
          description: not found resource
    put:
      tags:
      - odontograma
      description: update the Odontograma
      operationId: OdontogramaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Odontograma content
        required: true
        schema:
          $ref: '#/definitions/models.Odontograma'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Odontograma'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - odontograma
      description: delete the Odontograma
      operationId: OdontogramaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /orden/:
    get:
      tags:
      - orden
      description: get Orden
      operationId: OrdenController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Orden'
        "404":
          description: not found resource
    post:
      tags:
      - orden
      description: create Orden
      operationId: OrdenController.Post
      parameters:
      - in: body
        name: body
        description: body for Orden content
        required: true
        schema:
          $ref: '#/definitions/models.Orden'
      responses:
        "201":
          description: '{int} models.Orden'
        "400":
          description: the request contains incorrect syntax
  /orden/{id}:
    get:
      tags:
      - orden
      description: get Orden by id
      operationId: OrdenController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Orden'
        "404":
          description: not found resource
    put:
      tags:
      - orden
      description: update the Orden
      operationId: OrdenController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Orden content
        required: true
        schema:
          $ref: '#/definitions/models.Orden'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Orden'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - orden
      description: delete the Orden
      operationId: OrdenController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /persona/:
    get:
      tags:
      - persona
      description: get Persona
      operationId: PersonaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Persona'
        "404":
          description: not found resource
    post:
      tags:
      - persona
      description: create Persona
      operationId: PersonaController.Post
      parameters:
      - in: body
        name: body
        description: body for Persona content
        required: true
        schema:
          $ref: '#/definitions/models.Persona'
      responses:
        "201":
          description: '{int} models.Persona'
        "400":
          description: the request contains incorrect syntax
  /persona/{id}:
    get:
      tags:
      - persona
      description: get Persona by id
      operationId: PersonaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Persona'
        "404":
          description: not found resource
    put:
      tags:
      - persona
      description: update the Persona
      operationId: PersonaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Persona content
        required: true
        schema:
          $ref: '#/definitions/models.Persona'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Persona'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - persona
      description: delete the Persona
      operationId: PersonaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /remision/:
    get:
      tags:
      - remision
      description: get Remision
      operationId: RemisionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Remision'
        "404":
          description: not found resource
    post:
      tags:
      - remision
      description: create Remision
      operationId: RemisionController.Post
      parameters:
      - in: body
        name: body
        description: body for Remision content
        required: true
        schema:
          $ref: '#/definitions/models.Remision'
      responses:
        "201":
          description: '{int} models.Remision'
        "400":
          description: the request contains incorrect syntax
  /remision/{id}:
    get:
      tags:
      - remision
      description: get Remision by id
      operationId: RemisionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Remision'
        "404":
          description: not found resource
    put:
      tags:
      - remision
      description: update the Remision
      operationId: RemisionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Remision content
        required: true
        schema:
          $ref: '#/definitions/models.Remision'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Remision'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - remision
      description: delete the Remision
      operationId: RemisionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /signos_vitales/:
    get:
      tags:
      - signos_vitales
      description: get SignosVitales
      operationId: SignosVitalesController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SignosVitales'
        "404":
          description: not found resource
    post:
      tags:
      - signos_vitales
      description: create SignosVitales
      operationId: SignosVitalesController.Post
      parameters:
      - in: body
        name: body
        description: body for SignosVitales content
        required: true
        schema:
          $ref: '#/definitions/models.SignosVitales'
      responses:
        "201":
          description: '{int} models.SignosVitales'
        "400":
          description: the request contains incorrect syntax
  /signos_vitales/{id}:
    get:
      tags:
      - signos_vitales
      description: get SignosVitales by id
      operationId: SignosVitalesController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SignosVitales'
        "404":
          description: not found resource
    put:
      tags:
      - signos_vitales
      description: update the SignosVitales
      operationId: SignosVitalesController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SignosVitales content
        required: true
        schema:
          $ref: '#/definitions/models.SignosVitales'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SignosVitales'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - signos_vitales
      description: delete the SignosVitales
      operationId: SignosVitalesController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_antecedente/:
    get:
      tags:
      - tipo_antecedente
      description: get TipoAntecedente
      operationId: TipoAntecedenteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAntecedente'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_antecedente
      description: create TipoAntecedente
      operationId: TipoAntecedenteController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoAntecedente content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAntecedente'
      responses:
        "201":
          description: '{int} models.TipoAntecedente'
        "400":
          description: the request contains incorrect syntax
  /tipo_antecedente/{id}:
    get:
      tags:
      - tipo_antecedente
      description: get TipoAntecedente by id
      operationId: TipoAntecedenteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAntecedente'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_antecedente
      description: update the TipoAntecedente
      operationId: TipoAntecedenteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoAntecedente content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAntecedente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAntecedente'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_antecedente
      description: delete the TipoAntecedente
      operationId: TipoAntecedenteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_antecedente_psicologico/:
    get:
      tags:
      - tipo_antecedente_psicologico
      description: get TipoAntecedentePsicologico
      operationId: TipoAntecedentePsicologicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAntecedentePsicologico'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_antecedente_psicologico
      description: create TipoAntecedentePsicologico
      operationId: TipoAntecedentePsicologicoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoAntecedentePsicologico content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAntecedentePsicologico'
      responses:
        "201":
          description: '{int} models.TipoAntecedentePsicologico'
        "400":
          description: the request contains incorrect syntax
  /tipo_antecedente_psicologico/{id}:
    get:
      tags:
      - tipo_antecedente_psicologico
      description: get TipoAntecedentePsicologico by id
      operationId: TipoAntecedentePsicologicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAntecedentePsicologico'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_antecedente_psicologico
      description: update the TipoAntecedentePsicologico
      operationId: TipoAntecedentePsicologicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoAntecedentePsicologico content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAntecedentePsicologico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAntecedentePsicologico'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_antecedente_psicologico
      description: delete the TipoAntecedentePsicologico
      operationId: TipoAntecedentePsicologicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /valoracion_interpersonal/:
    get:
      tags:
      - valoracion_interpersonal
      description: get ValoracionInterpersonal
      operationId: ValoracionInterpersonalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ValoracionInterpersonal'
        "404":
          description: not found resource
    post:
      tags:
      - valoracion_interpersonal
      description: create ValoracionInterpersonal
      operationId: ValoracionInterpersonalController.Post
      parameters:
      - in: body
        name: body
        description: body for ValoracionInterpersonal content
        required: true
        schema:
          $ref: '#/definitions/models.ValoracionInterpersonal'
      responses:
        "201":
          description: '{int} models.ValoracionInterpersonal'
        "400":
          description: the request contains incorrect syntax
  /valoracion_interpersonal/{id}:
    get:
      tags:
      - valoracion_interpersonal
      description: get ValoracionInterpersonal by id
      operationId: ValoracionInterpersonalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ValoracionInterpersonal'
        "404":
          description: not found resource
    put:
      tags:
      - valoracion_interpersonal
      description: update the ValoracionInterpersonal
      operationId: ValoracionInterpersonalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ValoracionInterpersonal content
        required: true
        schema:
          $ref: '#/definitions/models.ValoracionInterpersonal'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ValoracionInterpersonal'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - valoracion_interpersonal
      description: delete the ValoracionInterpersonal
      operationId: ValoracionInterpersonalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
definitions:
  models.AccesoHistoria:
    title: AccesoHistoria
    type: object
    properties:
      FechaAcceso:
        type: string
        format: datetime
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HistoriaClinicaId:
        $ref: '#/definitions/models.HistoriaClinica'
      Id:
        type: integer
        format: int64
      ProfesionalId:
        type: integer
        format: int64
  models.Anamnesis:
    title: Anamnesis
    type: object
    properties:
      Alergias:
        type: string
      AntecedenteFamiliar:
        type: string
      Cardiopatias:
        type: string
      Cepillado:
        type: integer
        format: int64
      Chicle:
        type: boolean
      Diabetes:
        type: string
      Dulces:
        type: boolean
      EnfermedadRespiratoria:
        type: string
      Enjuague:
        type: integer
        format: int64
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      FiebreReumatica:
        type: string
      Fuma:
        type: boolean
      Hemorragias:
        type: string
      Hepatitis:
        type: string
      Hipertension:
        type: string
      HistoriaClinicaId:
        $ref: '#/definitions/models.HistoriaClinica'
      Id:
        type: integer
        format: int64
      Irradiaciones:
        type: string
      Medicamentos:
        type: string
      Otras:
        type: string
      Seda:
        type: integer
        format: int64
      Sinusitis:
        type: string
      Tratamiento:
        type: string
      UltimaVisita:
        type: string
        format: datetime
  models.Antecedente:
    title: Antecedente
    type: object
    properties:
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HistoriaClinicaId:
        $ref: '#/definitions/models.HistoriaClinica'
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
      TipoAntecedenteId:
        $ref: '#/definitions/models.TipoAntecedente'
  models.AntecedentePsicologico:
    title: AntecedentePsicologico
    type: object
    properties:
      ActualSomatico:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HistoriaClinicaId:
        $ref: '#/definitions/models.HistoriaClinica'
      Id:
        type: integer
        format: int64
      PasadoSomatico:
        type: string
      TipoAntecedentePsicologicoId:
        $ref: '#/definitions/models.TipoAntecedentePsicologico'
  models.ComportamientoConsulta:
    title: ComportamientoConsulta
    type: object
    properties:
      Afrontamiento:
        type: string
      Comportamiento:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Problematica:
        type: string
  models.ComposicionFamiliar:
    title: ComposicionFamiliar
    type: object
    properties:
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
  models.ControlPlaca:
    title: ControlPlaca
    type: object
    properties:
      Diagrama:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      IndiceActual:
        type: integer
        format: int64
      IndiceAnterior:
        type: integer
        format: int64
      Observaciones:
        type: string
  models.ConvencionOdontograma:
    title: ConvencionOdontograma
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Imagen:
        type: string
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.DatosEmergencia:
    title: DatosEmergencia
    type: object
    properties:
      Direccion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HistoriaClinicaId:
        $ref: '#/definitions/models.HistoriaClinica'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Parentesco:
        type: string
      Telefono:
        type: string
  models.Diagnostico:
    title: Diagnostico
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.Especialidad:
    title: Especialidad
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Interna:
        type: boolean
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.ExamenDental:
    title: ExamenDental
    type: object
    properties:
      Abrasion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Manchas:
        type: string
      Observaciones:
        type: string
      Oclusion:
        type: string
      Otros:
        type: string
      PatologiaPulpar:
        type: string
      PlacaBlanda:
        type: string
      PlacaCalcificada:
        type: string
      Supernumerarios:
        type: string
  models.ExamenEstomatologico:
    title: ExamenEstomatologico
    type: object
    properties:
      ArticulacionTemporo:
        type: string
      Carrillos:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      GlandulasSalivares:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Labios:
        type: string
      Lengua:
        type: string
      Maxilares:
        type: string
      MusculosMasticadores:
        type: string
      Observaciones:
        type: string
      Paladar:
        type: string
      PisoBoca:
        type: string
      SenosMaxilares:
        type: string
      SistemaLinfatico:
        type: string
      SistemaNervioso:
        type: string
      SistemaVascular:
        type: string
  models.ExcusaMedica:
    title: ExcusaMedica
    type: object
    properties:
      FechaCreacion:
        type: string
      FechaGenerado:
        type: string
        format: datetime
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
  models.HistoriaClinica:
    title: HistoriaClinica
    type: object
    properties:
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      PersonaId:
        type: integer
        format: int64
  models.HojaHistoria:
    title: HojaHistoria
    type: object
    properties:
      DatosPersonaConsulta:
        type: string
      DiagnosticoId:
        $ref: '#/definitions/models.Diagnostico'
      EspecialidadId:
        $ref: '#/definitions/models.Especialidad'
      Evolucion:
        type: string
      FechaConsulta:
        type: string
        format: datetime
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HistoriaClinicaId:
        $ref: '#/definitions/models.HistoriaClinica'
      Id:
        type: integer
        format: int64
      Motivo:
        type: string
      Observacion:
        type: string
      ProfesionalId:
        type: integer
        format: int64
  models.Limites:
    title: Limites
    type: object
    properties:
      Claros:
        type: string
      Difusos:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Rigidos:
        type: string
  models.Odontograma:
    title: Odontograma
    type: object
    properties:
      Diagrama:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
  models.Orden:
    title: Orden
    type: object
    properties:
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
  models.Persona:
    title: Persona
    type: object
    properties:
      CodigoEstudiantil:
        type: string
      Correo:
        type: string
      DependenciaId:
        type: integer
        format: int64
      Eps:
        type: string
      EstadoCondor:
        type: string
      Estamento:
        type: string
      FacultadId:
        type: integer
        format: int64
      FechaNacimiento:
        type: string
        format: datetime
      Genero:
        type: string
      Id:
        type: integer
        format: int64
      NumeroIdentificacion:
        type: string
      PrimerApellido:
        type: string
      PrimerNombre:
        type: string
      SegundoApellido:
        type: string
      SegundoNombre:
        type: string
      Telefono:
        type: string
      TipoIdentificacion:
        type: string
  models.Remision:
    title: Remision
    type: object
    properties:
      EspecialidadId:
        $ref: '#/definitions/models.Especialidad'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
  models.SignosVitales:
    title: SignosVitales
    type: object
    properties:
      Estatura:
        type: number
        format: double
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      FrecuenciaCardiaca:
        type: integer
        format: int64
      FrecuenciaRespiratoria:
        type: integer
        format: int64
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Imc:
        type: number
        format: double
      PerimetroAbdominal:
        type: number
        format: double
      Peso:
        type: number
        format: double
      Saturacion:
        type: integer
        format: int64
      Temperatura:
        type: number
        format: double
      TensionDiastolica:
        type: integer
        format: int64
      TensionMedia:
        type: number
        format: double
      TensionSistolica:
        type: integer
        format: int64
  models.TipoAntecedente:
    title: TipoAntecedente
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoAntecedentePsicologico:
    title: TipoAntecedentePsicologico
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.ValoracionInterpersonal:
    title: ValoracionInterpersonal
    type: object
    properties:
      Autoridad:
        type: string
      Drogas:
        type: string
      Economicos:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      HojaHistoriaId:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Judiciales:
        type: string
      Orientacion:
        type: string
      Pareja:
        type: string
      Pares:
        type: string
      Proteccion:
        type: string
      Relaciones:
        type: boolean
      Satisfaccion:
        type: string
tags:
- name: convencion_odontograma
  description: |
    ConvencionOdontogramaController operations for ConvencionOdontograma
- name: persona
  description: |
    PersonaController operations for Persona
- name: diagnostico
  description: |
    DiagnosticoController operations for Diagnostico
- name: especialidad
  description: |
    EspecialidadController operations for Especialidad
- name: acceso_historia
  description: |
    AccesoHistoriaController operations for AccesoHistoria
- name: anamnesis
  description: |
    AnamnesisController operations for Anamnesis
- name: datos_emergencia
  description: |
    DatosEmergenciaController operations for DatosEmergencia
- name: historia_clinica
  description: |
    HistoriaClinicaController operations for HistoriaClinica
- name: comportamiento_consulta
  description: |
    ComportamientoConsultaController operations for ComportamientoConsulta
- name: composicion_familiar
  description: |
    ComposicionFamiliarController operations for ComposicionFamiliar
- name: control_placa
  description: |
    ControlPlacaController operations for ControlPlaca
- name: examen_dental
  description: |
    ExamenDentalController operations for ExamenDental
- name: examen_estomatologico
  description: |
    ExamenEstomatologicoController operations for ExamenEstomatologico
- name: excusa_medica
  description: |
    ExcusaMedicaController operations for ExcusaMedica
- name: limites
  description: |
    LimitesController operations for Limites
- name: odontograma
  description: |
    OdontogramaController operations for Odontograma
- name: orden
  description: |
    OrdenController operations for Orden
- name: remision
  description: |
    RemisionController operations for Remision
- name: signos_vitales
  description: |
    SignosVitalesController operations for SignosVitales
- name: hoja_historia
  description: |
    HojaHistoriaController operations for HojaHistoria
- name: valoracion_interpersonal
  description: |
    ValoracionInterpersonalController operations for ValoracionInterpersonal
- name: tipo_antecedente
  description: |
    TipoAntecedenteController operations for TipoAntecedente
- name: antecedente
  description: |
    AntecedenteController operations for Antecedente
- name: tipo_antecedente_psicologico
  description: |
    TipoAntecedentePsicologicoController operations for TipoAntecedentePsicologico
- name: antecedente_psicologico
  description: |
    AntecedentePsicologicoController operations for AntecedentePsicologico
